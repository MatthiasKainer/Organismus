const n={},e={},o={on:(n,o)=>{e[n.name]=e[n.name]||[],e[n.name].push(o)},orchestrate:(n,o)=>{e[n.name]&&e[n.name].forEach(n=>n(o))}};function r(n){return void 0!==n&&!(n instanceof Function)}function t(e,o,t){if(n[e])throw new Error("Hormone already created");const i=r(o)?o:t,a=r(o)?void 0:o;return n[e]={name:e,value:i,transformation:a,receptors:[]},{name:e}}async function i({name:e},t){if(!n[e])throw new Error("Hormone does not exist");r(t)?n[e].value=t:n[e].value=void 0===t||t(n[e].value);const{receptors:i,transformation:a}=n[e];return i.forEach(({element:n})=>n.requestUpdate()),a&&a(n[e].value),o.orchestrate({name:e},n[e].value),await Promise.all(i.map(n=>n.element.updateComplete)),Object.assign({},n[e])}function a(e,{name:o}){if(!n[o])throw new Error("Hormone is not defined");return n[o].receptors.some(n=>n.element===e)||n[o].receptors.push({element:e}),n[o].value}export{t as defineHormone,o as hypothalamus,i as releaseHormone,a as useReceptor};
